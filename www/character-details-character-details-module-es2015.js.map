{"version":3,"sources":["./src/app/pages/character-details/character-details.page.html","./src/app/pages/character-details/character-details-routing.module.ts","./src/app/pages/character-details/character-details.module.ts","./src/app/pages/character-details/character-details.page.scss","./src/app/pages/character-details/character-details.page.ts"],"names":[],"mappings":"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","file":"character-details-character-details-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n    <!--\\n    defaultHref is the attribute for the ion-back-button that always show the back-button and go back to tabs/characters. \\n    the style of the each detail page is in css and match the style in the app \\n    -->\\n\\n\\t\\t<ion-buttons slot=\\\"start\\\" defaulthref=\\\"/tabs/character\\\">\\n\\t\\t\\t<ion-back-button></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title>\\n\\t\\t\\t<h2>Character Details </h2>\\n\\t\\t</ion-title>\\n\\t\\t<ion-buttons slot=\\\"end\\\">\\n        <!--\\n        When you click is going to run the method favoriteEpisode() or UnfavoriteEpisode()\\n        *ngIf is puting the information in the array of isFavourite or deleted from them\\n        Slot is the icon using for the favourite \\n        -->\\n\\t\\t\\t<ion-button (click)=\\\"unfavouriteCharacter()\\\" *ngIf=\\\"isFavourite\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"star\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"favouriteCharacter()\\\" *ngIf=\\\"!isFavourite\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"star-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-buttons>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n\\n\\t<ion-card *ngIf=\\\"character\\\">\\n        <!--\\n            I am Showing the name, nickname and status of each character using the stayle of paragraph in css forder\\n        -->\\n\\t\\t<ion-card-content>\\n\\t\\t<p>\\t{{ character.name }}</p>\\n\\t\\t</ion-card-content>\\n        <p> nickname : {{ character.nickname }}</p>\\n        <p> Status : {{ character.status }}</p>\\n\\n\\t</ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharacterDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharacterDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharacterDetailsPageRoutingModule } from './character-details-routing.module';\n\nimport { CharacterDetailsPage } from './character-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharacterDetailsPageRoutingModule\n  ],\n  declarations: [CharacterDetailsPage]\n})\nexport class CharacterDetailsPageModule {}\n","export default \"h2 {\\n  font-size: 20px;\\n  color: #ffffff;\\n  font-family: \\\"Franklin Gothic Medium\\\", \\\"Arial Narrow\\\", Arial, sans-serif;\\n  font-weight: 200;\\n  line-height: 50px;\\n  margin: 20 0 20px;\\n  text-transform: uppercase;\\n}\\n\\np {\\n  color: black;\\n  text-align: center;\\n  font-weight: 200;\\n  line-height: 50px;\\n  font-family: \\\"Franklin Gothic Medium\\\", \\\"Arial Narrow\\\", Arial, sans-serif;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2UvbW9iZGV2LWNhLTIwMTkyMDgvc3JjL2FwcC9wYWdlcy9jaGFyYWN0ZXItZGV0YWlscy9jaGFyYWN0ZXItZGV0YWlscy5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2NoYXJhY3Rlci1kZXRhaWxzL2NoYXJhY3Rlci1kZXRhaWxzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGVBQUE7RUFBaUIsY0FBQTtFQUFnQix3RUFBQTtFQUNqQyxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSx5QkFBQTtBQ0VKOztBREFBO0VBQ0ksWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLHdFQUFBO0FDR0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jaGFyYWN0ZXItZGV0YWlscy9jaGFyYWN0ZXItZGV0YWlscy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMiB7XG4gICAgXG4gICAgZm9udC1zaXplOiAyMHB4OyBjb2xvcjogI2ZmZmZmZjsgZm9udC1mYW1pbHk6ICdGcmFua2xpbiBHb3RoaWMgTWVkaXVtJywgJ0FyaWFsIE5hcnJvdycsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiAyMDA7IFxuICAgIGxpbmUtaGVpZ2h0OiA1MHB4OyBcbiAgICBtYXJnaW46IDIwIDAgMjBweDsgXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbnAge1xuICAgIGNvbG9yOiBibGFjaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC13ZWlnaHQ6IDIwMDsgXG4gICAgbGluZS1oZWlnaHQ6IDUwcHg7IFxuICAgIGZvbnQtZmFtaWx5OiAnRnJhbmtsaW4gR290aGljIE1lZGl1bScsICdBcmlhbCBOYXJyb3cnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbn0iLCJoMiB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtZmFtaWx5OiBcIkZyYW5rbGluIEdvdGhpYyBNZWRpdW1cIiwgXCJBcmlhbCBOYXJyb3dcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGxpbmUtaGVpZ2h0OiA1MHB4O1xuICBtYXJnaW46IDIwIDAgMjBweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxucCB7XG4gIGNvbG9yOiBibGFjaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogNTBweDtcbiAgZm9udC1mYW1pbHk6IFwiRnJhbmtsaW4gR290aGljIE1lZGl1bVwiLCBcIkFyaWFsIE5hcnJvd1wiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from 'src/app/services/api.service';\nimport { FavouriteService } from './../../services/favourite.service';\n\n\n@Component({\n    selector: 'app-character-details',\n    templateUrl: './character-details.page.html',\n    styleUrls: ['./character-details.page.scss'],\n})\nexport class CharacterDetailsPage implements OnInit {\n\n    // I created a variable to put all the elements or characters from the api in an array.\n    character: any;\n    // I am created a boolean to put or not info inside of favourite\n    isFavourite =false;\n    // variable to use to storage the info from each episode by id.\n    characterId =null;\n\n    constructor(private activateRoute: ActivatedRoute, private api: ApiService, private favouriteService: FavouriteService) { }\n\n    ngOnInit() {\n        // this funtion exactly as other get the characters from the api and storage them in characterId\n        // then take the characterId and storage in an array call character\n        this.characterId = this.activateRoute.snapshot.paramMap.get('id');\n        this.api.getCharacter(this.characterId).subscribe(res => {\n            this.character = res[0];\n            \n        });\n\n        // this funtion  to use the method favourite to put the favoutite charaters in a variable Favourite using a favourite service\n        this.favouriteService.isFavouriteCharacter(this.characterId).then(isFav => {\n            this.isFavourite = isFav;\n        });\n    }\n    \n    // Method to put the episode in a favourite variable using the favourite service \n    favouriteCharacter() {\n        this.favouriteService.favouriteCharacter(this.characterId).then(() => {\n            this.isFavourite = true;\n        });\n    }\n\n    // Method to remove the episode from favorite using the favourite service \n    unfavouriteCharacter() {\n        this.favouriteService.unfavouriteCharacter(this.characterId).then(() => {\n            this.isFavourite = false;\n        });\n    }\n\n\n}\n"],"sourceRoot":"webpack:///"}