{"version":3,"sources":["./src/app/pages/deaths/deaths.page.html","./src/app/pages/deaths/deaths-routing.module.ts","./src/app/pages/deaths/deaths.module.ts","./src/app/pages/deaths/deaths.page.scss","./src/app/pages/deaths/deaths.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,okDAAqgD,eAAe,gFAAgF,cAAc,8D;;;;;;;;;;;;;;;;;;;ACAxlD;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAMF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACF;AAEA;AAEqB;AAEvB;AAEc;AAYzD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAV5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,sEAAW;YACX,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,8EAAuB;SACxB;QACD,YAAY,EAAE,CAAC,uDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;ACtB7B;AAAe,oEAAK,mBAAmB,iFAAiF,oBAAoB,qBAAqB,sBAAsB,sBAAsB,uBAAuB,8BAA8B,GAAG,OAAO,iFAAiF,GAAG,SAAS,wBAAwB,uBAAuB,GAAG,6CAA6C,+jD;;;;;;;;;;;;;;;;;;;ACAtZ;AACM;AACf;AASzC,IAAa,UAAU,GAAvB,MAAa,UAAU;IASnB,YAAoB,MAAc,EAAU,GAAe;QAAvC,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAL3D,yDAAyD;QACzD,cAAS,GAAU,EAAE,CAAC;QACtB,6EAA6E;QAC7E,gBAAW,GAAG,EAAE,CAAC;IAE8C,CAAC;IAEhE,QAAQ;QAEJ,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,eAAe;QACX,mFAAmF;QACnF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACnC,2DAA2D;QAC3D,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC7B,mHAAmH;YACnH,IAAI,CAAC,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC5B,mDAAmD;YACnD,0BAA0B;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gEAAgE;IAChE,WAAW,CAAC,KAAK;QACb,mEAAmE;QACnE,qDAAqD;QACrD,qIAAqI;QAErI,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;CACJ;;YA9B+B,sDAAM;YAAe,gEAAU;;AATlD,UAAU;IALtB,+DAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,kNAAiC;;KAEpC,CAAC;2EAU8B,sDAAM,EAAe,gEAAU;GATlD,UAAU,CAuCtB;AAvCsB","file":"deaths-deaths-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"danger\\\">\\n\\t\\t<!--\\n\\t        the color I used is danger in order to give a Style, also I am using the scss page to add style\\n\\t        to the headers and paragraphs \\n\\t    -->\\n\\n\\t\\t<ion-title>\\n\\t\\t\\t<h1> Deaths </h1>\\n\\t\\t</ion-title>\\n\\n\\t\\t<ion-toolbar color=\\\"danger\\\">\\n\\t\\t\\t<!--\\n\\t        In deaths I am creating a search bar with ion-seachbar int there \\n\\t        I specified the method,  I am going to use in my deaths.page.ts with my property event\\n\\t    -->\\n\\n\\t\\t\\t<ion-searchbar placeholder=\\\"Look for keywords...\\\" (ionChange)=\\\"searchDeath($event)\\\"></ion-searchbar>\\n\\t\\t</ion-toolbar>\\n\\t</ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n\\t<ion-list>\\n\\t\\t<!--\\n\\t        the ngFor is a interaction  with the array and creating elements with the same type (information taking from mikhail-cct-github-io/mobdev/w4)\\n\\t        async is using because our variable deths is observable so this is telling to observe the variable\\n\\t        deathsfilter is a pipe (a module),  I created to run the method that check the input from my user (saving in my variable searText) and match it  with my array of quotes\\n\\t        in other words, this pipe run the deathsfilter of the words storage in searchText and match with the info in an array of deaths, returning the match. \\n\\t    -->\\n\\n\\t\\t<ion-item *ngFor=\\\"let death of deaths | async | deathsfilter: searchText1\\\">\\n\\n\\t\\t\\t<!--\\n         I am showing who died and the cause with the paragraph style \\n        -->\\n\\n\\t\\t\\t<p> {{ death.death }} </p>\\n\\t\\t\\t<label> <p> ---- Cause : ------ </p> </label>\\n\\t\\t\\t<label> <p> {{ death.cause}}</p> </label>\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DeathsPage } from './deaths.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DeathsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DeathsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DeathsPageRoutingModule } from './deaths-routing.module';\n\nimport { DeathsPage } from './deaths.page';\n\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    PipesModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DeathsPageRoutingModule\n  ],\n  declarations: [DeathsPage]\n})\nexport class DeathsPageModule {}\n","export default \"h1 {\\n  color: #ffffff;\\n  font-family: \\\"Franklin Gothic Medium\\\", \\\"Arial Narrow\\\", Arial, sans-serif;\\n  font-size: 30px;\\n  font-weight: 200;\\n  line-height: 50px;\\n  margin: 20 0 20px;\\n  text-align: center;\\n  text-transform: uppercase;\\n}\\n\\np {\\n  font-family: \\\"Franklin Gothic Medium\\\", \\\"Arial Narrow\\\", Arial, sans-serif;\\n}\\n\\ndiv {\\n  padding-right: 10px;\\n  padding-left: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2UvbW9iZGV2LWNhLTIwMTkyMDgvc3JjL2FwcC9wYWdlcy9kZWF0aHMvZGVhdGhzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvZGVhdGhzL2RlYXRocy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQWdCLHdFQUFBO0VBQ2hCLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0FDRUo7O0FEQUE7RUFDSSx3RUFBQTtBQ0dKOztBRERBO0VBQ0ksbUJBQUE7RUFDQSxrQkFBQTtBQ0lKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZGVhdGhzL2RlYXRocy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7XG4gICAgY29sb3I6ICNmZmZmZmY7IGZvbnQtZmFtaWx5OiAnRnJhbmtsaW4gR290aGljIE1lZGl1bScsICdBcmlhbCBOYXJyb3cnLCBBcmlhbCwgc2Fucy1zZXJpZjsgXG4gICAgZm9udC1zaXplOiAzMHB4OyBcbiAgICBmb250LXdlaWdodDogMjAwOyBcbiAgICBsaW5lLWhlaWdodDogNTBweDsgXG4gICAgbWFyZ2luOiAyMCAwIDIwcHg7IFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbnAge1xuICAgIGZvbnQtZmFtaWx5OiAnRnJhbmtsaW4gR290aGljIE1lZGl1bScsICdBcmlhbCBOYXJyb3cnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cbmRpdiB7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG4gICAgXG59IiwiaDEge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udC1mYW1pbHk6IFwiRnJhbmtsaW4gR290aGljIE1lZGl1bVwiLCBcIkFyaWFsIE5hcnJvd1wiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAzMHB4O1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogNTBweDtcbiAgbWFyZ2luOiAyMCAwIDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxucCB7XG4gIGZvbnQtZmFtaWx5OiBcIkZyYW5rbGluIEdvdGhpYyBNZWRpdW1cIiwgXCJBcmlhbCBOYXJyb3dcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XG59XG5cbmRpdiB7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gIHBhZGRpbmctbGVmdDogNDBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n    selector: 'app-deaths',\n    templateUrl: './deaths.page.html',\n    styleUrls: ['./deaths.page.scss'],\n})\nexport class DeathsPage implements OnInit {\n\n    // create a quotes variable to storage all the elements from the apiservice from http://breakingbad.api\n    deaths: Observable<any>;\n    // variable type array to storage all my variables deaths\n    newDeaths: any[] = [];\n    // variable to storage the text from the input in the searchbar from my html \n    searchText1 = '';\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n\n        this.initializeItems();\n    }\n\n    initializeItems() {\n        // get the info in deaths using the api service and putting in the deaths variable \n        this.deaths = this.api.getDeaths();\n        // I am subscribe is a method that comes from rxjs library \n        this.deaths.subscribe(newdeath => {\n            // Subscribe call the observable and this.newDeaths = [] put the staff inside of the observable inside of the array\n            this.newDeaths = [newdeath];\n            // console it is only to check the info in console \n            //console.log( newdeath); \n        });\n    }\n\n    //event is the name of the property that i have for this method \n    searchDeath(event) {\n        // value is the variable  of the input from the user in the browser\n        //event target value returns the element of the input\n        // I am taking this constant, then this has been storage  in searchtext finally  I am using searchText in the search filter in html. \n\n        const text = event.target.value;\n        this.searchText1 = text;\n\n        console.log(text);\n    }\n}\n"],"sourceRoot":"webpack:///"}