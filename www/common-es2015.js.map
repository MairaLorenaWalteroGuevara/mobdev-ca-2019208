{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-ccbda579.js","./node_modules/@ionic/core/dist/esm/index-729ec402.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/pipes/deathsfilter.pipe.ts","./src/app/pipes/filter.pipe.ts","./src/app/pipes/pipes.module.ts","./src/app/services/api.service.ts","./src/app/services/favourite.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiH;;;;;;;;;;;;;AC3CjH;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;;;;;;;;;;;;AC/GlC;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAA;AAAA;AAAA;AAAA,uEAAuE;AACvE,qDAAqD;AACrD,mEAAmE;AACnE,uHAAuH;AACvH,qCAAqC;AACrC,yDAAyD;AACzD,2EAA2E;AAC3E,2GAA2G;AAC3G,wFAAwF;;AAEpC;AAGpD,qFAAqF;AACrF,wDAAwD;AAKxD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAG3B,SAAS,CAAE,MAAa,EAAE,GAAW;QAEnC,OAAO,CA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","file":"common-es2015.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n    try {\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        const documentFragment = document.createDocumentFragment();\n        const workingDiv = document.createElement('div');\n        documentFragment.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(blockedTag => {\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                const element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                const childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        const dfChildren = getElementChildren(documentFragment);\n        /* tslint:disable-next-line */\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        const fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment);\n        // First child is always the div we did our work in\n        const getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\n        const attribute = element.attributes.item(i);\n        const attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        const attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    const childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (let i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n    return (el.children != null) ? el.children : el.childNodes;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","// I use the code and create the seach funtion by following this link: \n//https://www.youtube.com/watch?v=T5pdU0s4J6w&t=1551s\n//  ionic 4+: Search Bar - Módulos - Filtros   by  Fernando Herrera\n// this video is in spanish and also have other video beffore but the first video dont give you a lot of inforamtion.  \n// to create the module you have to: \n//1. in your console generate the pipe : ionic g m pipes \n//2. create the folder : ionic g pipe pipes/filter ( or name that you want)\n// 3. allow to export the module to other folders, cahnging the pipe.module.ts and adding export the module\n// 4. you have to import the module in each page you want to use inside of the module.ts\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Quote } from '@angular/compiler';\n\n// It is a module created to run the transform method to filter the information that \n//I am looking for in my seach bar inside of quotes.html\n\n@Pipe({\n  name: 'deathsfilter'\n})\nexport class DeathsfilterPipe implements PipeTransform {\n\n    \n  transform( deaths: any[], val: String): any[] {\n    \n    console.log(deaths);\n\n //what this method do is taking the input from the search bar (text) \n    // if text does not have information return my normal array with all my deaths, \n    // but if not, this filter takes and return waht match with the input : \n    // so if my array deaths include the input, this return that information from my array. \n    // In this case death.death allow you to look for the words inside of the deaths and \n    // death.cause allow you to look for words inside of the cause or for the death cause. \n\n\n\n    if (val.length===0){return deaths;}\n    val = val.toLocaleLowerCase(); \n    return deaths.filter(death =>{\n        return death.death.toLocaleLowerCase().includes(val)\n        || death.cause.toLocaleLowerCase().includes(val);\n      // console.log(keyword);\n    });\n  }\n\n}","// I use the code and create the seach funtion by following this link: \n//https://www.youtube.com/watch?v=T5pdU0s4J6w&t=1551s\n//  ionic 4+: Search Bar - Módulos - Filtros   by  Fernando Herrera\n// this video is in spanish and also have other video beffore but the first video dont give you a lot of inforamtion. \n// to create the module you have to: \n//1. in your console generate the pipe : ionic g m pipes \n//2. create the folder : ionic g pipe pipes/filter ( or name that you want)\n// 3. allow to export the module to other folders, cahnging the pipe.module.ts and adding export the module\n// 4. you have to import the module in each page you want to use inside of the module.ts\n\n\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Quote } from '@angular/compiler';\n\n// It is a module created to run the transform method to filter the information that \n//I am looking for in my seach bar inside of quotes.html\n\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform( quotes: any[], text: String): Quote[] {\n    \n    // I use a lot console.log to print in my console that I am getting the inforamtion that I need\n    console.log(quotes);\n\n   //what this method do is taking the input from the search bar (text) \n    // if text does not have information return my normal array with all my quotes, \n    // but if not, this filter takes and return waht match with the input : \n    // so if my array quotes include the input, this return that information from my array. \n    // In this case qoute.qoute allow you to look for the words inside of the quotes and \n    // qoute.aouthor allow you to look for words inside of the  autor or for the author. \n\n\n    if (text.length===0){return quotes;}\n    text = text.toLocaleLowerCase(); \n    return quotes.filter(quote =>{\n        return quote.quote.toLocaleLowerCase().includes(text)\n        || quote.author.toLocaleLowerCase().includes(text);\n       // console.log(text);\n    });\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterPipe } from './filter.pipe';\nimport { DeathsfilterPipe } from './deathsfilter.pipe';\n\n\n\n@NgModule({\n  declarations: [FilterPipe, DeathsfilterPipe],\n  exports: [FilterPipe, DeathsfilterPipe]\n  // it is necesarry to export the pipe to allow it to be use outside\n})\nexport class PipesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n// It is a service created to get all the information from http://breakingbadapi/ \n// I created a method for each topic that I want to get from the api\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n\n    constructor(private http: HttpClient) { }\n\n    getEpisodes() {\n        // this <[]> it is to get the information inseide of an array\n        return this.http.get<[]>(`https://www.breakingbadapi.com/api/episodes`);\n    }\n\n    getEpisode(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes/${id}`);\n    }\n\n    getCharacters(offset) {\n        // in Characters we want to get 10 characters each time we scroll the funtion scrolll, \n        // this information I got it from breaking bad api webside documentation limit and offset \n        // I am gonna get arrays of 10 characters to use in my scroll created in characters.ts \n        return this.http.get<[]>(`https://www.breakingbadapi.com/api/characters?limit=10&offset=${offset}`)\n\n    }\n\n    getCharacter(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/characters/${id}`);\n    }\n\n    getQuotes() {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes`);\n    }\n\n    getQuote(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes/${id}`);\n    }\n    getDeaths() {\n        return this.http.get(`https://www.breakingbadapi.com/api/deaths`);\n    }\n\n    getDeath(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/deaths/${id}`);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n \nconst STORAGE_KEY = 'favouriteEpisodes';\nconst STORAGE_KEY1 = 'favouriteCharacters';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class FavouriteService {\n \n  constructor(private storage: Storage) { }\n \n\n  // add constructors with 4 funtions, to have favorite or unfavorite episodes\n  // methos than compare and Storage the episodes or characters  using a Key for episodes and Key1 for characters\n  // Inforamtion from https://mikhail-cct.github.io/mobdev/wk7/#/\n  getAllFavouriteEpisodes() {\n    return this.storage.get(STORAGE_KEY);\n  }\n \n  isFavourite(episodeId) {\n    return this.getAllFavouriteEpisodes().then(result => {\n      return result && result.indexOf(episodeId) !== -1;\n    });\n  }\n \n  favouriteEpisode(episodeId) {\n    return this.getAllFavouriteEpisodes().then(result => {\n      if (result) {\n        result.push(episodeId);\n        return this.storage.set(STORAGE_KEY, result);\n      } else {\n        return this.storage.set(STORAGE_KEY, [episodeId]);\n      }\n    });\n  }\n \n  unfavouriteEpisode(episodeId) {\n    return this.getAllFavouriteEpisodes().then(result => {\n      if (result) {\n        var index = result.indexOf(episodeId);\n        result.splice(index, 1);\n        return this.storage.set(STORAGE_KEY, result);\n      }\n    });\n  }\n\n  getAllFavouriteCharacters() {\n    return this.storage.get(STORAGE_KEY1);\n  }\n \n  isFavouriteCharacter(characterId) {\n    return this.getAllFavouriteCharacters().then(result => {\n      return result && result.indexOf(characterId) !== -1;\n    });\n  }\n \n  favouriteCharacter(characterId) {\n    return this.getAllFavouriteCharacters().then(result => {\n      if (result) {\n        result.push(characterId);\n        return this.storage.set(STORAGE_KEY1, result);\n      } else {\n        return this.storage.set(STORAGE_KEY1, [characterId]);\n      }\n    });\n  }\n \n  unfavouriteCharacter(characterId) {\n    return this.getAllFavouriteCharacters().then(result => {\n      if (result) {\n        var index = result.indexOf(characterId);\n        result.splice(index, 1);\n        return this.storage.set(STORAGE_KEY1, result);\n      }\n    });\n  }\n \n}\n"],"sourceRoot":"webpack:///"}