{"version":3,"sources":["./src/app/pages/characters/characters.page.html","./src/app/pages/characters/characters-routing.module.ts","./src/app/pages/characters/characters.module.ts","./src/app/pages/characters/characters.page.scss","./src/app/pages/characters/characters.page.ts"],"names":[],"mappings":"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","file":"characters-characters-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<!--\\n        The color and the Style I used in here, it is related with breaking bad colors. \\n        and the style of headers and paraphras is in the css file\\n        -->\\n\\n\\n\\t\\t<ion-title>\\n\\t\\t\\t<h1>Characters</h1>\\n\\t\\t</ion-title>\\n\\n\\t</ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n\\t<div>\\n\\t\\t<ion-list>\\n        <!--\\n\\t        the ngFor is a interaction  with the array and creating elements with the same type (information taking from mikhail-cct-github-io/mobdev/w4)\\n\\t        async is using because our variable characters is observable so this is telling to observe the variable\\n\\t    -->\\n\\n\\t\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let character of characters \\\"\\n\\t\\t\\t\\t(click)=\\\"openDetails(character)\\\">\\n                <!-- \\n                I am showing the name of the character in a list. \\n                -->\\n\\n\\t\\t\\t\\t<label><p>{{ character.name }}</p> </label>\\n\\t\\t\\t</ion-item>\\n\\t\\t</ion-list>\\n        <!--\\n        I am downloading more characters creating a infinity scroll method call loadMore using an event property\\n        Loading Spinner is a property of the scroll that is going to show load more characters. \\n        -->\\n\\n\\t\\t<ion-infinite-scroll (ionInfinite)=\\\"loadMore($event)\\\">\\n\\t\\t\\t<ion-infinite-scroll-content loadingSpinner=\\\"bubble\\\" loadingText=\\\"load more Characters\\\">\\n\\t\\t\\t</ion-infinite-scroll-content>\\n\\t\\t</ion-infinite-scroll>\\n\\t</div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharactersPage } from './characters.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharactersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharactersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharactersPageRoutingModule } from './characters-routing.module';\n\nimport { CharactersPage } from './characters.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharactersPageRoutingModule\n  ],\n  declarations: [CharactersPage]\n})\nexport class CharactersPageModule {}\n","export default \"h1 {\\n  color: #ffffff;\\n  font-family: \\\"Franklin Gothic Medium\\\", \\\"Arial Narrow\\\", Arial, sans-serif;\\n  font-size: 30px;\\n  font-weight: 200;\\n  line-height: 50px;\\n  margin: 20 0 20px;\\n  text-align: center;\\n  text-transform: uppercase;\\n}\\n\\np {\\n  font-family: \\\"Franklin Gothic Medium\\\", \\\"Arial Narrow\\\", Arial, sans-serif;\\n}\\n\\ndiv {\\n  padding-right: 10px;\\n  padding-left: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2UvbW9iZGV2LWNhLTIwMTkyMDgvc3JjL2FwcC9wYWdlcy9jaGFyYWN0ZXJzL2NoYXJhY3RlcnMucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9jaGFyYWN0ZXJzL2NoYXJhY3RlcnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUFnQix3RUFBQTtFQUNoQixlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtBQ0VKOztBREFBO0VBQ0ksd0VBQUE7QUNHSjs7QUREQTtFQUNJLG1CQUFBO0VBQ0Esa0JBQUE7QUNJSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3RlcnMvY2hhcmFjdGVycy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7XG4gICAgY29sb3I6ICNmZmZmZmY7IGZvbnQtZmFtaWx5OiAnRnJhbmtsaW4gR290aGljIE1lZGl1bScsICdBcmlhbCBOYXJyb3cnLCBBcmlhbCwgc2Fucy1zZXJpZjsgXG4gICAgZm9udC1zaXplOiAzMHB4OyBcbiAgICBmb250LXdlaWdodDogMjAwOyBcbiAgICBsaW5lLWhlaWdodDogNTBweDsgXG4gICAgbWFyZ2luOiAyMCAwIDIwcHg7IFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbnAge1xuICAgIGZvbnQtZmFtaWx5OiAnRnJhbmtsaW4gR290aGljIE1lZGl1bScsICdBcmlhbCBOYXJyb3cnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cbmRpdiB7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG4gICAgXG59IiwiaDEge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udC1mYW1pbHk6IFwiRnJhbmtsaW4gR290aGljIE1lZGl1bVwiLCBcIkFyaWFsIE5hcnJvd1wiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAzMHB4O1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogNTBweDtcbiAgbWFyZ2luOiAyMCAwIDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxucCB7XG4gIGZvbnQtZmFtaWx5OiBcIkZyYW5rbGluIEdvdGhpYyBNZWRpdW1cIiwgXCJBcmlhbCBOYXJyb3dcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XG59XG5cbmRpdiB7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gIHBhZGRpbmctbGVmdDogNDBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\n\n\n@Component({\n    selector: 'app-characters',\n    templateUrl: './characters.page.html',\n    styleUrls: ['./characters.page.scss'],\n})\n\n\nexport class CharactersPage implements OnInit {\n\n    // I create a variable type array to put all the elements or characters from the api \n    characters = [];\n    // the offset is to start the count of element 0 in the array and the maximum to limited the dowlonload characters to 65\n    offset = 0;\n    maximumOffset = 65;\n\n\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n\n        // run the method loadcharcaters and getting the items from the api. \n        this.loadCharacters();\n\n    }\n\n    loadCharacters(event?) {\n\n        // to get the info using the getCharacters method from the api service  \n        //and putting in the characters variable, also I am concatenate the two arrays\n        // in order to get 10 elements from the array put in this array  \n        this.api.getCharacters(this.offset).subscribe(data => {\n            console.log('mydata', data);\n            this.characters = this.characters.concat(data);\n\n\n            if (event) {\n                event.target.complete();\n            }\n\n        })\n\n    }\n\n    // this is a loadMore method call from the html for the infinitive scroll\n    // this method is going to run the method loadCharacters(), getting only 10 character each time\n    //and if all the characters are already download the function are disable.\n    loadMore(event?) {\n\n        // to set how many characters I want to download each time, in this case 10 \n        this.offset = this.offset + 10;\n        \n        this.loadCharacters(event);\n\n        if (this.offset > this.maximumOffset) {\n            event.target.disable = true;\n        }\n        \n    }\n    \n    // To take the variable from api calle char_id and the router.navigateByUrl is the route path.\n    // and activate the open datails. \n    openDetails(character) {\n        let characterId = character.char_id;\n        this.router.navigateByUrl(`/tabs/characters/${characterId}`);\n    }\n\n}\n"],"sourceRoot":"webpack:///"}