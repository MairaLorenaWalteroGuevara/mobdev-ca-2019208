{"version":3,"sources":["node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","node_modules/@ionic/core/dist/esm/haptic-ccbda579.js","node_modules/@ionic/core/dist/esm/index-729ec402.js","node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","src/app/pipes/deathsfilter.pipe.ts","src/app/pipes/filter.pipe.ts","src/app/pipes/pipes.module.ts","src/app/services/api.service.ts","src/app/services/favourite.service.ts"],"names":[],"mappings":"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","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n    try {\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        const documentFragment = document.createDocumentFragment();\n        const workingDiv = document.createElement('div');\n        documentFragment.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(blockedTag => {\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                const element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                const childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        const dfChildren = getElementChildren(documentFragment);\n        /* tslint:disable-next-line */\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        const fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment);\n        // First child is always the div we did our work in\n        const getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\n        const attribute = element.attributes.item(i);\n        const attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        const attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    const childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (let i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n    return (el.children != null) ? el.children : el.childNodes;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","// I use the code and create the seach funtion by following this link: \n//https://www.youtube.com/watch?v=T5pdU0s4J6w&t=1551s\n//  ionic 4+: Search Bar - Módulos - Filtros   by  Fernando Herrera\n// this video is in spanish and also have other video beffore but the first video dont give you a lot of inforamtion.  \n// to create the module you have to: \n//1. in your console generate the pipe : ionic g m pipes \n//2. create the folder : ionic g pipe pipes/filter ( or name that you want)\n// 3. allow to export the module to other folders, cahnging the pipe.module.ts and adding export the module\n// 4. you have to import the module in each page you want to use inside of the module.ts\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Quote } from '@angular/compiler';\n\n// It is a module created to run the transform method to filter the information that \n//I am looking for in my seach bar inside of quotes.html\n\n@Pipe({\n  name: 'deathsfilter'\n})\nexport class DeathsfilterPipe implements PipeTransform {\n\n    \n  transform( deaths: any[], val: String): any[] {\n    \n    console.log(deaths);\n\n //what this method do is taking the input from the search bar (text) \n    // if text does not have information return my normal array with all my deaths, \n    // but if not, this filter takes and return waht match with the input : \n    // so if my array deaths include the input, this return that information from my array. \n    // In this case death.death allow you to look for the words inside of the deaths and \n    // death.cause allow you to look for words inside of the cause or for the death cause. \n\n\n\n    if (val.length===0){return deaths;}\n    val = val.toLocaleLowerCase(); \n    return deaths.filter(death =>{\n        return death.death.toLocaleLowerCase().includes(val)\n        || death.cause.toLocaleLowerCase().includes(val);\n      // console.log(keyword);\n    });\n  }\n\n}","// I use the code and create the seach funtion by following this link: \n//https://www.youtube.com/watch?v=T5pdU0s4J6w&t=1551s\n//  ionic 4+: Search Bar - Módulos - Filtros   by  Fernando Herrera\n// this video is in spanish and also have other video beffore but the first video dont give you a lot of inforamtion. \n// to create the module you have to: \n//1. in your console generate the pipe : ionic g m pipes \n//2. create the folder : ionic g pipe pipes/filter ( or name that you want)\n// 3. allow to export the module to other folders, cahnging the pipe.module.ts and adding export the module\n// 4. you have to import the module in each page you want to use inside of the module.ts\n\n\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Quote } from '@angular/compiler';\n\n// It is a module created to run the transform method to filter the information that \n//I am looking for in my seach bar inside of quotes.html\n\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform( quotes: any[], text: String): Quote[] {\n    \n    // I use a lot console.log to print in my console that I am getting the inforamtion that I need\n    console.log(quotes);\n\n   //what this method do is taking the input from the search bar (text) \n    // if text does not have information return my normal array with all my quotes, \n    // but if not, this filter takes and return waht match with the input : \n    // so if my array quotes include the input, this return that information from my array. \n    // In this case qoute.qoute allow you to look for the words inside of the quotes and \n    // qoute.aouthor allow you to look for words inside of the  autor or for the author. \n\n\n    if (text.length===0){return quotes;}\n    text = text.toLocaleLowerCase(); \n    return quotes.filter(quote =>{\n        return quote.quote.toLocaleLowerCase().includes(text)\n        || quote.author.toLocaleLowerCase().includes(text);\n       // console.log(text);\n    });\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterPipe } from './filter.pipe';\nimport { DeathsfilterPipe } from './deathsfilter.pipe';\n\n\n\n@NgModule({\n  declarations: [FilterPipe, DeathsfilterPipe],\n  exports: [FilterPipe, DeathsfilterPipe]\n  // it is necesarry to export the pipe to allow it to be use outside\n})\nexport class PipesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n// It is a service created to get all the information from http://breakingbadapi/ \n// I created a method for each topic that I want to get from the api\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n\n    constructor(private http: HttpClient) { }\n\n    getEpisodes() {\n        // this <[]> it is to get the information inseide of an array\n        return this.http.get<[]>(`https://www.breakingbadapi.com/api/episodes`);\n    }\n\n    getEpisode(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes/${id}`);\n    }\n\n    getCharacters(offset) {\n        // in Characters we want to get 10 characters each time we scroll the funtion scrolll, \n        // this information I got it from breaking bad api webside documentation limit and offset \n        // I am gonna get arrays of 10 characters to use in my scroll created in characters.ts \n        return this.http.get<[]>(`https://www.breakingbadapi.com/api/characters?limit=10&offset=${offset}`)\n\n    }\n\n    getCharacter(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/characters/${id}`);\n    }\n\n    getQuotes() {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes`);\n    }\n\n    getQuote(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes/${id}`);\n    }\n    getDeaths() {\n        return this.http.get(`https://www.breakingbadapi.com/api/deaths`);\n    }\n\n    getDeath(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/deaths/${id}`);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n \nconst STORAGE_KEY = 'favouriteEpisodes';\nconst STORAGE_KEY1 = 'favouriteCharacters';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class FavouriteService {\n \n  constructor(private storage: Storage) { }\n \n\n  // add constructors with 4 funtions, to have favorite or unfavorite episodes\n  // methos than compare and Storage the episodes or characters  using a Key for episodes and Key1 for characters\n  // Inforamtion from https://mikhail-cct.github.io/mobdev/wk7/#/\n  getAllFavouriteEpisodes() {\n    return this.storage.get(STORAGE_KEY);\n  }\n \n  isFavourite(episodeId) {\n    return this.getAllFavouriteEpisodes().then(result => {\n      return result && result.indexOf(episodeId) !== -1;\n    });\n  }\n \n  favouriteEpisode(episodeId) {\n    return this.getAllFavouriteEpisodes().then(result => {\n      if (result) {\n        result.push(episodeId);\n        return this.storage.set(STORAGE_KEY, result);\n      } else {\n        return this.storage.set(STORAGE_KEY, [episodeId]);\n      }\n    });\n  }\n \n  unfavouriteEpisode(episodeId) {\n    return this.getAllFavouriteEpisodes().then(result => {\n      if (result) {\n        var index = result.indexOf(episodeId);\n        result.splice(index, 1);\n        return this.storage.set(STORAGE_KEY, result);\n      }\n    });\n  }\n\n  getAllFavouriteCharacters() {\n    return this.storage.get(STORAGE_KEY1);\n  }\n \n  isFavouriteCharacter(characterId) {\n    return this.getAllFavouriteCharacters().then(result => {\n      return result && result.indexOf(characterId) !== -1;\n    });\n  }\n \n  favouriteCharacter(characterId) {\n    return this.getAllFavouriteCharacters().then(result => {\n      if (result) {\n        result.push(characterId);\n        return this.storage.set(STORAGE_KEY1, result);\n      } else {\n        return this.storage.set(STORAGE_KEY1, [characterId]);\n      }\n    });\n  }\n \n  unfavouriteCharacter(characterId) {\n    return this.getAllFavouriteCharacters().then(result => {\n      if (result) {\n        var index = result.indexOf(characterId);\n        result.splice(index, 1);\n        return this.storage.set(STORAGE_KEY1, result);\n      }\n    });\n  }\n \n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}